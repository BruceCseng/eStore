spring:
  application:
    name: gateway-web
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
              allowedOrigins: "*"
              allowedMethods:
                - GET
                - POST
                - PUT
                - DELETE
      routes:
            - id: estore_goods_route
              #用户请求需要路由到该服务[指定要路由的服务]
              #uri: http://localhost:8071
              #lb:使用LoadBalancerClient 实现负载均衡,后面goods是微服务的名称
              uri: lb://goods
              predicates:
              # 用户请求的域名规则配置。所有以xxx.com的请求都将被路由到http://localhost:8071微服务
              #- Host=127.0.0.1**
              #所有以/brand开始的请求，都路由http://localhost:8071的微服务
              - Path=/api/**
              # 所有以/api/brand的请求，都被路由到http://localhost:8071微服务
              # 希望该路径由微服务网关自动给我添加上/api前缀，每次请求真实微服务网关的时候，需要使用微服务网关将/api去掉
              filters:
              # 将请求路径中的第一个路径去掉，请求路径以/ 区分，一个/代表一个路径
              - StripPrefix=1
              #局部限流过滤器
              - name: RequestRateLimiter #请求数限流 名字不能乱写，使用默认的factory
                args:
                  #用户身份唯一识别标识符
                  key-resolver: "#{@ipKeyResolver}"
                  #每秒钟只允许有1个请求
                  redis-rate-limiter.replenishRate: 1
                  #允许并发有4个请求[宽限的个数]
                  redis-rate-limiter.burstCapacity: 4
            - id: estore_user_route
              uri: lb://user
              predicates:
              - Path=/api/user/**,/api/address/**,/api/city/**
              filters:
                # 将请求路径中的第一个路径去掉，请求路径以/ 区分，一个/代表一个路径
              - StripPrefix=1
  redis:
    host: 119.45.119.154
    port: 6379

server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8070/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true